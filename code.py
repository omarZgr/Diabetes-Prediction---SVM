# -*- coding: utf-8 -*-
"""code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11Gg63QUmdJVvrfwCZ2LF6AKmLOrZrbho
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn import svm
from sklearn.metrics import accuracy_score

data = pd.read_csv('/content/diabetes.csv')
data

# help pd.read_csv
pd.read_csv

data.describe()

data['Outcome'].value_counts()
data.groupby('Outcome').mean()

X = data.drop('Outcome',axis=1)
Y = data['Outcome']
X.describe()

scaler = StandardScaler()
X_std = pd.DataFrame(scaler.fit_transform(X))
X_std.describe()

X_train,X_test,Y_train,Y_test = train_test_split(X_std,Y,random_state=1,stratify=Y)

classifier = svm.SVC(kernel='linear')
classifier.fit(X_train,Y_train)

# model evaluation accuracy score

X_train_prediction = classifier.predict(X_train)
train_data_accuracy = accuracy_score(X_train_prediction,Y_train)
print('train_data_accuracy : ',train_data_accuracy)


X_test_prediction = classifier.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction,Y_test)
print('test_data_accuracy : ',test_data_accuracy)

input_data = (7,147,76,0,0,39.4,0.257,43)

input_data_as_numpy = np.asarray(input_data)

input_data_reshaped = input_data_as_numpy.reshape(1,-1)

input_data_reshaped_std = scaler.transform(input_data_reshaped)

predictive = classifier.predict(input_data_reshaped_std)

print(predictive)